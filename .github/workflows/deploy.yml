name: Deploy MCP Server to EC2

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          # Save SSH key
          echo "$EC2_SSH_KEY" > ec2_key.pem
          chmod 600 ec2_key.pem

          # Deploy via SSH
          ssh -i ec2_key.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << 'ENDSSH'
            set -e

            # Create app directory
            mkdir -p ~/plantos-mcp
            cd ~/plantos-mcp

            # Clone or update repository
            if [ -d ".git" ]; then
              echo "Updating existing repository..."
              git pull origin main
            else
              echo "Cloning repository..."
              git clone https://github.com/Plantos-Sensor/mcp-server.git .
            fi

            # Stop existing containers
            docker-compose down || true

            # Build and start containers
            docker-compose up -d --build

            # Show status
            docker-compose ps

            echo "✅ MCP server deployed successfully!"
          ENDSSH

          # Clean up SSH key
          rm ec2_key.pem

      - name: Verify deployment
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          echo "Waiting for server to start..."
          sleep 15

          # Check if server is responding
          if curl -f http://$EC2_HOST:8080/health 2>/dev/null; then
            echo "✅ Deployment successful! MCP server is running."
          else
            echo "⚠️  Server deployed but health check failed. Check logs with: ssh ec2-user@$EC2_HOST 'cd ~/plantos-mcp && docker-compose logs'"
            exit 1
          fi
